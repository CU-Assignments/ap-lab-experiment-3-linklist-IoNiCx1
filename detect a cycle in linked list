class Solution {
public:
    bool hasCycle(ListNode* head) {
        if (head == nullptr) {
            return false; // No cycle if the list is empty
        }

        ListNode* slow = head;
        ListNode* fast = head;

        while (fast != nullptr && fast->next != nullptr) {
            slow = slow->next;             // Move slow pointer one step
            fast = fast->next->next;       // Move fast pointer two steps

            if (slow == fast) {
                return true;  // Cycle detected
            }
        }

        return false;  // No cycle detected
    }
};
